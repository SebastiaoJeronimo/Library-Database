DROP TABLE Requisicao CASCADE CONSTRAINTS;
DROP TABLE GuardadoEm CASCADE CONSTRAINTS;
DROP TABLE Escreve CASCADE CONSTRAINTS;
DROP TABLE Estante CASCADE CONSTRAINTS;
DROP TABLE LimpadoPor CASCADE CONSTRAINTS;
DROP TABLE Sala;
DROP TABLE FuncLimpeza CASCADE CONSTRAINTS;
DROP TABLE Bibliotecario CASCADE CONSTRAINTS;
DROP TABLE Funcionario CASCADE CONSTRAINTS;
DROP TABLE Trabalho CASCADE CONSTRAINTS;
DROP TABLE Leitor CASCADE CONSTRAINTS;
DROP TABLE Autor;
DROP TABLE Pessoas;
DROP TABLE Livro;


CREATE TABLE Livro(
IDLivro NUMBER(5,0) PRIMARY KEY,
NumEdicao NUMBER(2,0) NOT NULL,
check(NumEdicao>0),
ISBN VARCHAR2(17),
GeneroLiterario VARCHAR2(30) NOT NULL,
Titulo VARCHAR2(60),
Editora VARCHAR2(60),
DataPublicacao DATE
);


CREATE TABLE Pessoas(
NIF VARCHAR2(9) PRIMARY KEY,
NomePessoa VARCHAR2(30) NOT NULL,
Mail VARCHAR2(30)
);

CREATE TABLE Autor(
NomeAutor VARCHAR2(30) PRIMARY KEY
);

CREATE TABLE Leitor(
NIFLeitor VARCHAR2(9) REFERENCES Pessoas(NIF) PRIMARY KEY,
DataNascimento DATE
);

CREATE TABLE Trabalho(
Ordenado NUMBER(6,2),
Descricao VARCHAR2(50),
CHECK (Ordenado > 0),
PRIMARY KEY (Ordenado, Descricao),
CargaSemanal NUMBER(4,2)
);

CREATE TABLE Funcionario(
NIFFuncionario VARCHAR2(9) REFERENCES Pessoas(NIF) PRIMARY KEY,
nFuncionario NUMBER(4,0),
Ordenado NUMBER(6,2),
Descricao VARCHAR2(50),
CONSTRAINT FK_Ordenado_Descricao FOREIGN KEY (Ordenado, Descricao) REFERENCES Trabalho(Ordenado, Descricao),
UNIQUE(nFuncionario)
);

CREATE TABLE Bibliotecario(
NIFBibliotecario VARCHAR2(9) REFERENCES Funcionario(NIFFuncionario) PRIMARY KEY
);

CREATE TABLE FuncLimpeza(
NIFFuncLimpeza VARCHAR2(9) REFERENCES Funcionario(NIFFuncionario) PRIMARY KEY
);

CREATE TABLE Sala(
IDSala NUMBER(2,0) PRIMARY KEY 
);

CREATE TABLE LimpadoPor(
IDSala  NUMBER(3,0) REFERENCES Sala(IDSala),
NIFFuncLimpeza REFERENCES Funcionario(NIFFuncionario),
PRIMARY KEY(IDSala,NIFFuncLimpeza)
);

CREATE TABLE Estante(
IDEstante NUMBER(3,0) PRIMARY KEY,
GeneroLiterario VARCHAR2(20) NOT NULL,
IDSala REFERENCES Sala(IDSala)
);

INSERT INTO Sala values(0);
INSERT INTO Estante values(0,'Livros por arrumar',0);

CREATE TABLE Escreve(
IDLivro REFERENCES Livro(IDLivro),
NomeAutor REFERENCES Autor(NomeAutor),
PRIMARY KEY (IDLivro, NomeAutor)
);

CREATE TABLE GuardadoEm(
IDEstante REFERENCES Estante(IDEstante),
IDLivro REFERENCES Livro(IDLivro),
Prateleira NUMBER(3,0) NOT NULL,
PRIMARY KEY (IDLivro,IDEstante)
);

CREATE TABLE Requisicao(
DataRequisicao DATE NOT NULL,
IDlivro REFERENCES Livro(IDLivro),
DataEntrega DATE,
PrazoEntrega DATE NOT NULL,
NIFLeitor REFERENCES Leitor(NIFLeitor),
NIFBibliotecario REFERENCES Bibliotecario(NIFBibliotecario),
PRIMARY KEY (DataRequisicao,IDLivro)
);

CREATE OR REPLACE TRIGGER criarFuncionario
BEFORE INSERT OR UPDATE ON Funcionario
FOR EACH ROW
DECLARE 
  cnt NUMBER;
BEGIN
SELECT COUNT(NIF) INTO cnt FROM Pessoas WHERE Pessoas.NIF = :NEW.NIFFUNCIONARIO;
IF (cnt = 0)
THEN Raise_Application_Error (-20101, 'Nao existe pessoa');
END IF;
END;
/

CREATE OR REPLACE TRIGGER criarLeitor
BEFORE INSERT OR UPDATE ON Leitor
FOR EACH ROW
DECLARE 
  cnt NUMBER;
BEGIN
SELECT COUNT(NIF) INTO cnt FROM Pessoas WHERE Pessoas.NIF = :NEW.NIFLEITOR;
IF (cnt = 0)
THEN Raise_Application_Error (-20101, 'Nao existe pessoa');
END IF;
END;
/


CREATE OR REPLACE TRIGGER criarBibliotecario
BEFORE INSERT OR UPDATE ON Bibliotecario
FOR EACH ROW
DECLARE 
  cnt NUMBER;
BEGIN
SELECT COUNT(NIFFUNCLIMPEZA) INTO cnt FROM FuncLimpeza WHERE FuncLimpeza.NIFFUNCLIMPEZA = :NEW.NIFBIBLIOTECARIO;
IF (cnt > 0)
THEN Raise_Application_Error (-20101, 'Pessoa nao pode ser bibliotecario, pois ja e funcionario de limpeza');
END IF;
END;
/

CREATE OR REPLACE TRIGGER criarFuncLimpeza
BEFORE INSERT OR UPDATE ON FuncLimpeza
FOR EACH ROW
DECLARE 
  cnt NUMBER;
BEGIN
SELECT COUNT(NIFBIBLIOTECARIO) INTO cnt FROM Bibliotecario WHERE Bibliotecario.NIFBIBLIOTECARIO = :NEW.NIFFUNCLIMPEZA;
IF (cnt > 0)
    THEN Raise_Application_Error (-20101, 'Pessoa nao pode ser funcionario de limpeza, pois ja e bibliotecario');
END IF;
END;
/


CREATE OR REPLACE TRIGGER requisitarLivro
BEFORE INSERT ON Requisicao
FOR EACH ROW
DECLARE
cnt NUMBER;
castigo NUMBER;
BEGIN
SELECT COUNT(*) INTO cnt FROM GuardadoEm WHERE :NEW.IDLivro = GuardadoEm.IDLivro;
IF (cnt = 0)
    THEN Raise_Application_Error (-20101, 'Livro nao disponivel para requisicao');
END IF;
SELECT COUNT(*) INTO castigo FROM Requisicao WHERE (:NEW.DataRequisicao > Requisicao.PrazoEntrega 
and Requisicao.NIFLeitor = :NEW.NIFLeitor and Requisicao.DataEntrega IS NULL);
IF (castigo > 0)
THEN Raise_Application_Error(-20101, 'O leitor esta castigado, porque tem livros por entregar');
END IF;
DELETE FROM GuardadoEm WHERE :NEW.IDLivro = GuardadoEm.IDLivro;
END;
/

   
CREATE OR REPLACE TRIGGER devolverOLivro
BEFORE Update ON Requisicao 
FOR EACH ROW
BEGIN
IF (:NEW.DataEntrega IS NULL)
    THEN Raise_Application_Error(-20101, 'Atribuicao invalida');
END IF;
INSERT INTO GuardadoEm (IDESTANTE, IDLIVRO, PRATELEIRA) 
VALUES(0, :NEW.IDLivro, 0);
END;
/


CREATE OR REPLACE TRIGGER arrumarNaEstante
BEFORE INSERT ON GuardadoEm
FOR EACH ROW
DECLARE
generoLivro VARCHAR2(30);
generoEstante VARCHAR2(30);
BEGIN
SELECT GENEROLITERARIO INTO generoLivro FROM LIVRO WHERE Livro.IDLivro = :NEW.IDLivro;
SELECT GENEROLITERARIO INTO generoEstante FROM ESTANTE WHERE Estante.IDEstante = :NEW.IDEstante;

IF(generoLivro <> generoEstante and :NEW.IDEstante <> 0)
    THEN Raise_Application_Error(-20101, 'O Genero Literario nao e o mesmo');
END IF;
END;
/


CREATE OR REPLACE TRIGGER rearrumarNaEstante
BEFORE UPDATE ON GuardadoEm
FOR EACH ROW
DECLARE
generoLivro VARCHAR2(30);
generoEstante VARCHAR2(30);
BEGIN
SELECT GENEROLITERARIO INTO generoLivro FROM LIVRO WHERE Livro.IDLivro = :NEW.IDLivro;
SELECT GENEROLITERARIO INTO generoEstante FROM ESTANTE WHERE Estante.IDEstante = :NEW.IDEstante;

IF (:NEW.IDEstante = 0)
THEN Raise_Application_Error(-20101, 'Atualizacao invalida: Espaco reservado a livros por arrumar');
END IF;

IF(generoLivro <> generoEstante)
    THEN Raise_Application_Error(-20101, 'O Genero Literario nao e o mesmo');
END IF;
END;
/


--INSERTING EXAMPLES


-- Inserting AUTOR examples

INSERT INTO AUTOR (NOMEAUTOR) 
VALUES ('Cynthia Hand');

INSERT INTO AUTOR (NOMEAUTOR) 
VALUES ('George Eliot');

INSERT INTO AUTOR (NOMEAUTOR) 
VALUES ('Colin Meloy');

INSERT INTO AUTOR (NOMEAUTOR) 
VALUES ('Carson Ellis');

INSERT INTO AUTOR (NOMEAUTOR) 
VALUES ('Barbara Park');

INSERT INTO AUTOR (NOMEAUTOR) 
VALUES ('Denise Brunkus');

INSERT INTO AUTOR (NOMEAUTOR) 
VALUES ('Leon Uris');

INSERT INTO AUTOR (NOMEAUTOR) 
VALUES ('Mason Currey');

INSERT INTO AUTOR (NOMEAUTOR) 
VALUES ('Sheri Reynolds');

INSERT INTO AUTOR (NOMEAUTOR) 
VALUES ('Daniel Quinn');

INSERT INTO AUTOR (NOMEAUTOR) 
VALUES ('Fiona Barton');

INSERT INTO AUTOR (NOMEAUTOR) 
VALUES ('Mary Westmacott');

INSERT INTO AUTOR (NOMEAUTOR) 
VALUES ('Agatha Christie');

-- End of inserting AUTOR examples


-- Inserting PESSOAS examples

INSERT INTO PESSOAS (NIF, NOMEPESSOA, MAIL) 
VALUES ('214967054', 'Rosie Sullivan', 'r.sullivan@randatmail.com');

INSERT INTO PESSOAS (NIF, NOMEPESSOA, MAIL) 
VALUES ('225651827', 'April Adams', 'a.adams@randatmail.com');

INSERT INTO PESSOAS (NIF, NOMEPESSOA, MAIL) 
VALUES ('270747224', 'Garry Crawford', 'g.crawford@randatmail.com');

INSERT INTO PESSOAS (NIF, NOMEPESSOA, MAIL) 
VALUES ('271214916', 'Alina Montgomery', 'a.montgomery@randatmail.com');

INSERT INTO PESSOAS (NIF, NOMEPESSOA, MAIL) 
VALUES ('202923548', 'Steven Edwards', 's.edwards@randatmail.com');

INSERT INTO PESSOAS (NIF, NOMEPESSOA, MAIL) 
VALUES ('193475328', 'Byron Foster', 'b.foster@randatmail.com');

INSERT INTO PESSOAS (NIF, NOMEPESSOA, MAIL) 
VALUES ('241785429', 'April Jones', 'a.jones@randatmail.com');

INSERT INTO PESSOAS (NIF, NOMEPESSOA, MAIL) 
VALUES ('220440966', 'Mary Fowler', 'm.fowler@randatmail.com');

INSERT INTO PESSOAS (NIF, NOMEPESSOA, MAIL) 
VALUES ('222708078', 'Dominik Myers', 'd.myers@randatmail.com');

INSERT INTO PESSOAS (NIF, NOMEPESSOA, MAIL) 
VALUES ('191369778', 'Miranda Stewart', 'm.stewart@randatmail.com');

INSERT INTO PESSOAS (NIF, NOMEPESSOA, MAIL) 
VALUES ('214249873', 'Gianna Andrews', 'g.andrews@randatmail.com');

INSERT INTO PESSOAS (NIF, NOMEPESSOA, MAIL) 
VALUES ('244866544', 'Frederick Walker', 'f.walker@randatmail.com');

INSERT INTO PESSOAS (NIF, NOMEPESSOA, MAIL) 
VALUES ('228050279', 'Frederick Roberts', 'f.roberts@randatmail.com');

INSERT INTO PESSOAS (NIF, NOMEPESSOA, MAIL) 
VALUES ('206639927', 'Robert Adams', 'r.adams@randatmail.com');

INSERT INTO PESSOAS (NIF, NOMEPESSOA, MAIL) 
VALUES ('241451772', 'Dainton Walker', 'd.walker@randatmail.com');

INSERT INTO PESSOAS (NIF, NOMEPESSOA, MAIL) 
VALUES ('214689195', 'Haris Parker', 'h.parker@randatmail.com');

INSERT INTO PESSOAS (NIF, NOMEPESSOA, MAIL) 
VALUES ('249372601', 'Alisa Harris', 'a.harris@randatmail.com');

INSERT INTO PESSOAS (NIF, NOMEPESSOA, MAIL) 
VALUES ('231096817', 'Jasmine Johnston', 'j.johnston@randatmail.com');

INSERT INTO PESSOAS (NIF, NOMEPESSOA, MAIL) 
VALUES ('220061004', 'Isabella Smith', 'i.smith@randatmail.com');

INSERT INTO PESSOAS (NIF, NOMEPESSOA, MAIL) 
VALUES ('193154813', 'Lyndon Elliott', 'l.elliott@randatmail.com');

-- End of inserting AUTOR examples


-- Inserting TRABALHO examples

INSERT INTO TRABALHO (ORDENADO, DESCRICAO, CARGASEMANAL) 
VALUES (1523.49, 'Librarian', 40);

INSERT INTO TRABALHO (ORDENADO, DESCRICAO, CARGASEMANAL) 
VALUES (1139.79, 'Co-Assistant Librarian', 35);

INSERT INTO TRABALHO (ORDENADO, DESCRICAO, CARGASEMANAL) 
VALUES (762.83, 'Cleaning Employee', 20);

INSERT INTO TRABALHO (ORDENADO, DESCRICAO, CARGASEMANAL) 
VALUES (2159.32, 'Library Manager', 45);

-- End of inserting TRABALHO examples


-- Inserting FUNCIONARIO examples

INSERT INTO FUNCIONARIO (NIFFUNCIONARIO, NFUNCIONARIO, ORDENADO, DESCRICAO) 
VALUES ('214967054', 1430, 1523.49, 'Librarian');

INSERT INTO FUNCIONARIO (NIFFUNCIONARIO, NFUNCIONARIO, ORDENADO, DESCRICAO) 
VALUES ('225651827', 7630, 762.83, 'Cleaning Employee');

INSERT INTO FUNCIONARIO (NIFFUNCIONARIO, NFUNCIONARIO, ORDENADO, DESCRICAO) 
VALUES ('270747224', 7984, 1139.79, 'Co-Assistant Librarian');

INSERT INTO FUNCIONARIO (NIFFUNCIONARIO, NFUNCIONARIO, ORDENADO, DESCRICAO) 
VALUES ('271214916', 8221, 1523.49, 'Librarian');

INSERT INTO FUNCIONARIO (NIFFUNCIONARIO, NFUNCIONARIO, ORDENADO, DESCRICAO) 
VALUES ('202923548', 5684, 762.83, 'Cleaning Employee');

INSERT INTO FUNCIONARIO (NIFFUNCIONARIO, NFUNCIONARIO, ORDENADO, DESCRICAO) 
VALUES ('193475328', 1054, 762.83, 'Cleaning Employee');

INSERT INTO FUNCIONARIO (NIFFUNCIONARIO, NFUNCIONARIO, ORDENADO, DESCRICAO) 
VALUES ('241785429', 8922, 1139.79, 'Co-Assistant Librarian');

INSERT INTO FUNCIONARIO (NIFFUNCIONARIO, NFUNCIONARIO, ORDENADO, DESCRICAO) 
VALUES ('220440966', 2270, 1523.49, 'Librarian');

INSERT INTO FUNCIONARIO (NIFFUNCIONARIO, NFUNCIONARIO, ORDENADO, DESCRICAO) 
VALUES ('222708078', 1001, 2159.32, 'Library Manager');

INSERT INTO FUNCIONARIO (NIFFUNCIONARIO, NFUNCIONARIO, ORDENADO, DESCRICAO) 
VALUES ('191369778', 4634, 1139.79, 'Co-Assistant Librarian');

-- End of inserting FUNCIONARIO examples


-- Inserting FUNCLIMPEZA examples

INSERT INTO FUNCLIMPEZA (NIFFUNCLIMPEZA) 
VALUES ('225651827');

INSERT INTO FUNCLIMPEZA (NIFFUNCLIMPEZA) 
VALUES ('202923548');

INSERT INTO FUNCLIMPEZA (NIFFUNCLIMPEZA) 
VALUES ('193475328');

--End of inserting FUNCLIMPEZA examples


-- Inserting BIBLIOTECARIO examples

INSERT INTO BIBLIOTECARIO (NIFBIBLIOTECARIO) 
VALUES ('214967054');

INSERT INTO BIBLIOTECARIO (NIFBIBLIOTECARIO) 
VALUES ('270747224');

INSERT INTO BIBLIOTECARIO (NIFBIBLIOTECARIO) 
VALUES ('271214916');

INSERT INTO BIBLIOTECARIO (NIFBIBLIOTECARIO) 
VALUES ('241785429');

INSERT INTO BIBLIOTECARIO (NIFBIBLIOTECARIO) 
VALUES ('220440966');

INSERT INTO BIBLIOTECARIO (NIFBIBLIOTECARIO) 
VALUES ('222708078');

INSERT INTO BIBLIOTECARIO (NIFBIBLIOTECARIO) 
VALUES ('191369778');

-- End of inserting BIBLIOTECARIO examples


-- Inserting LEITOR examples

INSERT INTO LEITOR (NIFLEITOR, DATANASCIMENTO) 
VALUES ('214249873', to_date('10/23/1984', 'MM/DD/RRRR'));

INSERT INTO LEITOR (NIFLEITOR, DATANASCIMENTO) 
VALUES ('244866544', to_date('03/04/1975', 'MM/DD/RRRR'));

INSERT INTO LEITOR (NIFLEITOR, DATANASCIMENTO) 
VALUES ('228050279', to_date('04/27/1963', 'MM/DD/RRRR'));

INSERT INTO LEITOR (NIFLEITOR, DATANASCIMENTO) 
VALUES ('206639927', to_date('02/15/1998', 'MM/DD/RRRR'));

INSERT INTO LEITOR (NIFLEITOR, DATANASCIMENTO) 
VALUES ('241451772', to_date('12/30/1962', 'MM/DD/RRRR'));

INSERT INTO LEITOR (NIFLEITOR, DATANASCIMENTO) 
VALUES ('214689195', to_date('02/12/2000', 'MM/DD/RRRR'));

INSERT INTO LEITOR (NIFLEITOR, DATANASCIMENTO) 
VALUES ('249372601', to_date('01/03/2004', 'MM/DD/RRRR'));

INSERT INTO LEITOR (NIFLEITOR, DATANASCIMENTO) 
VALUES ('231096817', to_date('03/06/1991', 'MM/DD/RRRR'));

INSERT INTO LEITOR (NIFLEITOR, DATANASCIMENTO) 
VALUES ('220061004', to_date('05/01/1954', 'MM/DD/RRRR'));

INSERT INTO LEITOR (NIFLEITOR, DATANASCIMENTO) 
VALUES ('193154813', to_date('01/24/2001', 'MM/DD/RRRR'));

INSERT INTO LEITOR (NIFLEITOR, DATANASCIMENTO) 
VALUES ('202923548', to_date('01/30/2001', 'MM/DD/RRRR'));

-- End of inserting LEITOR examples


-- Inserting SALA examples

INSERT INTO SALA (IDSALA) 
VALUES (4);

INSERT INTO SALA (IDSALA) 
VALUES (1);

INSERT INTO SALA (IDSALA) 
VALUES (3);

INSERT INTO SALA (IDSALA) 
VALUES (2);

-- End of inserting SALA examples


-- Inserting ESTANTE examples

INSERT INTO ESTANTE (IDESTANTE, GENEROLITERARIO, IDSALA) 
VALUES (3, 'Ficcao', 3);

INSERT INTO ESTANTE (IDESTANTE, GENEROLITERARIO, IDSALA) 
VALUES (1, 'Suspense', 1);

INSERT INTO ESTANTE (IDESTANTE, GENEROLITERARIO, IDSALA) 
VALUES (9, 'Fantasia', 4);

INSERT INTO ESTANTE (IDESTANTE, GENEROLITERARIO, IDSALA) 
VALUES (7, 'Infantil', 2);

INSERT INTO ESTANTE (IDESTANTE, GENEROLITERARIO, IDSALA) 
VALUES (6, 'Ficcao Historica', 1);

INSERT INTO ESTANTE (IDESTANTE, GENEROLITERARIO, IDSALA) 
VALUES (4, 'Biografia', 2);

INSERT INTO ESTANTE (IDESTANTE, GENEROLITERARIO, IDSALA) 
VALUES (8, 'Drama', 3);

INSERT INTO ESTANTE (IDESTANTE, GENEROLITERARIO, IDSALA) 
VALUES (5, 'Romance', 4);

-- End of inserting ESTANTE examples


-- Inserting LIMPADOPOR examples

INSERT INTO LIMPADOPOR (IDSALA, NIFFUNCLIMPEZA) 
VALUES (4, '225651827');

INSERT INTO LIMPADOPOR (IDSALA, NIFFUNCLIMPEZA) 
VALUES (1, '202923548');

INSERT INTO LIMPADOPOR (IDSALA, NIFFUNCLIMPEZA) 
VALUES (3, '193475328');

INSERT INTO LIMPADOPOR (IDSALA, NIFFUNCLIMPEZA) 
VALUES (2, '202923548');

-- End of inserting LIMPADOPOR examples


-- Inserting LIVRO examples

INSERT INTO LIVRO (IDLIVRO, NUMEDICAO, ISBN, GENEROLITERARIO, TITULO, EDITORA, DATAPUBLICACAO) 
VALUES (20095, 3, '978-6-0025-4024-9', 'Ficcao', 'Hallowed', 'Darton, Longman and Todd Ltd', to_date('10/02/1984', 'MM/DD/RRRR'));

INSERT INTO LIVRO (IDLIVRO, NUMEDICAO, ISBN, GENEROLITERARIO, TITULO, EDITORA, DATAPUBLICACAO) 
VALUES (66812, 9, '978-5-5089-6348-4', 'Suspense', 'Silas Marner: The Weaver of Raveloe', 'William Blackwood and Sons', to_date('04/05/1994', 'MM/DD/RRRR'));

INSERT INTO LIVRO (IDLIVRO, NUMEDICAO, ISBN, GENEROLITERARIO, TITULO, EDITORA, DATAPUBLICACAO) 
VALUES (76934, 4, '978-6-1723-6882-7', 'Fantasia', 'Wildwood', 'Transworld Publishers Ltd', to_date('07/26/2001', 'MM/DD/RRRR'));

INSERT INTO LIVRO (IDLIVRO, NUMEDICAO, ISBN, GENEROLITERARIO, TITULO, EDITORA, DATAPUBLICACAO) 
VALUES (89123, 2, '978-4-2475-1137-6', 'Infantil', 'Junie B. Jones and the Stupid Smelly Bus', 'New York : Random House', to_date('03/17/1992', 'MM/DD/RRRR'));

INSERT INTO LIVRO (IDLIVRO, NUMEDICAO, ISBN, GENEROLITERARIO, TITULO, EDITORA, DATAPUBLICACAO) 
VALUES (81980, 7, '978-0-1808-0415-5', 'Ficcao Historica', 'The Haj', 'Doubleday', to_date('09/01/1984', 'MM/DD/RRRR'));

INSERT INTO LIVRO (IDLIVRO, NUMEDICAO, ISBN, GENEROLITERARIO, TITULO, EDITORA, DATAPUBLICACAO) 
VALUES (28180, 8, '978-2-8067-3168-5', 'Biografia', 'Daily Rituals: How Artists Work', 'Alfred A. Knopf, Inc.', to_date('04/23/2013', 'MM/DD/RRRR'));

INSERT INTO LIVRO (IDLIVRO, NUMEDICAO, ISBN, GENEROLITERARIO, TITULO, EDITORA, DATAPUBLICACAO) 
VALUES (64271, 1, '978-5-2161-7266-6', 'Romance', 'The Rapture of Canaan', 'Diane Pub', to_date('06/21/1995', 'MM/DD/RRRR'));

INSERT INTO LIVRO (IDLIVRO, NUMEDICAO, ISBN, GENEROLITERARIO, TITULO, EDITORA, DATAPUBLICACAO) 
VALUES (90231, 10, '978-5-4775-9506-8', 'Romance', 'Ishmael: An Adventure of the Mind and Spirit', 'Random House Audio', to_date('01/01/2000', 'MM/DD/RRRR'));

INSERT INTO LIVRO (IDLIVRO, NUMEDICAO, ISBN, GENEROLITERARIO, TITULO, EDITORA, DATAPUBLICACAO) 
VALUES (19495, 6, '978-9-2826-7634-9', 'Drama', 'The Widow', 'Bantam Press', to_date('01/14/2016', 'MM/DD/RRRR'));

INSERT INTO LIVRO (IDLIVRO, NUMEDICAO, ISBN, GENEROLITERARIO, TITULO, EDITORA, DATAPUBLICACAO) 
VALUES (85735, 5, '978-2-0098-4773-2', 'Romance', 'Absent in the Spring', 'Collins', to_date('08/29/1944', 'MM/DD/RRRR'));

-- End of inserting LIVRO examples

-- Inserting ESCREVE examples

INSERT INTO ESCREVE (IDLIVRO, NOMEAUTOR)
VALUES (20095, 'Cynthia Hand');

INSERT INTO ESCREVE (IDLIVRO, NOMEAUTOR)
VALUES (66812, 'George Eliot');

INSERT INTO ESCREVE (IDLIVRO, NOMEAUTOR) 
VALUES (76934, 'Colin Meloy');

INSERT INTO ESCREVE (IDLIVRO, NOMEAUTOR) 
VALUES (76934, 'Carson Ellis');

INSERT INTO ESCREVE (IDLIVRO, NOMEAUTOR) 
VALUES (89123, 'Barbara Park');

INSERT INTO ESCREVE (IDLIVRO, NOMEAUTOR) 
VALUES (89123, 'Denise Brunkus');

INSERT INTO ESCREVE (IDLIVRO, NOMEAUTOR) 
VALUES (81980, 'Leon Uris');

INSERT INTO ESCREVE (IDLIVRO, NOMEAUTOR) 
VALUES (28180, 'Mason Currey');

INSERT INTO ESCREVE (IDLIVRO, NOMEAUTOR) 
VALUES (64271, 'Sheri Reynolds');

INSERT INTO ESCREVE (IDLIVRO, NOMEAUTOR) 
VALUES (90231, 'Daniel Quinn');

INSERT INTO ESCREVE (IDLIVRO, NOMEAUTOR) 
VALUES (19495, 'Fiona Barton');

INSERT INTO ESCREVE (IDLIVRO, NOMEAUTOR) 
VALUES (85735, 'Mary Westmacott');

INSERT INTO ESCREVE (IDLIVRO, NOMEAUTOR) 
VALUES (85735, 'Agatha Christie');

-- End of inserting ESCREVE examples


-- Inserting GUARDADOEM examples

INSERT INTO GUARDADOEM (IDESTANTE, IDLIVRO, PRATELEIRA) 
VALUES (5, 85735, 3);

INSERT INTO GUARDADOEM (IDESTANTE, IDLIVRO, PRATELEIRA) 
VALUES (1, 66812, 5);

INSERT INTO GUARDADOEM (IDESTANTE, IDLIVRO, PRATELEIRA) 
VALUES (9, 76934, 3);

INSERT INTO GUARDADOEM (IDESTANTE, IDLIVRO, PRATELEIRA) 
VALUES (7, 89123, 1);

INSERT INTO GUARDADOEM (IDESTANTE, IDLIVRO, PRATELEIRA) 
VALUES (6, 81980, 1);

INSERT INTO GUARDADOEM (IDESTANTE, IDLIVRO, PRATELEIRA) 
VALUES (4, 28180, 4);

INSERT INTO GUARDADOEM (IDESTANTE, IDLIVRO, PRATELEIRA) 
VALUES (8, 19495, 1);

INSERT INTO GUARDADOEM (IDESTANTE, IDLIVRO, PRATELEIRA) 
VALUES (5, 64271, 5);

INSERT INTO GUARDADOEM (IDESTANTE, IDLIVRO, PRATELEIRA) 
VALUES (3, 20095, 5);

INSERT INTO GUARDADOEM (IDESTANTE, IDLIVRO, PRATELEIRA) 
VALUES (5, 90231, 2);

-- End of inserting GUARDADOEM examples


-- Inserting REQUISICAO examples

INSERT INTO REQUISICAO (DATAREQUISICAO, IDLIVRO, DATAENTREGA, PRAZOENTREGA, NIFLEITOR, NIFBIBLIOTECARIO) 
VALUES (to_date('05/02/2022', 'MM/DD/RRRR'), 66812, NULL, to_date('05/17/2022', 'MM/DD/RRRR'), '206639927', '271214916');

INSERT INTO REQUISICAO (DATAREQUISICAO, IDLIVRO, DATAENTREGA, PRAZOENTREGA, NIFLEITOR, NIFBIBLIOTECARIO) 
VALUES (to_date('05/02/2022', 'MM/DD/RRRR'), 90231, NULL, to_date('05/17/2022', 'MM/DD/RRRR'), '206639927', '271214916');

INSERT INTO REQUISICAO (DATAREQUISICAO, IDLIVRO, DATAENTREGA, PRAZOENTREGA, NIFLEITOR, NIFBIBLIOTECARIO) 
VALUES (to_date('04/10/2022', 'MM/DD/RRRR'), 85735, NULL, to_date('04/25/2022', 'MM/DD/RRRR'), '231096817', '220440966');

INSERT INTO REQUISICAO (DATAREQUISICAO, IDLIVRO, DATAENTREGA, PRAZOENTREGA, NIFLEITOR, NIFBIBLIOTECARIO) 
VALUES (to_date('04/27/2022', 'MM/DD/RRRR'), 19495, NULL, to_date('04/25/2022', 'MM/DD/RRRR'), '231096817', '220440966');

INSERT INTO REQUISICAO (DATAREQUISICAO, IDLIVRO, DATAENTREGA, PRAZOENTREGA, NIFLEITOR, NIFBIBLIOTECARIO) 
VALUES (to_date('04/10/2022', 'MM/DD/RRRR'), 81980, to_date('04/24/2022', 'MM/DD/RRRR'), to_date('04/25/2022', 'MM/DD/RRRR'), '244866544', '191369778');

INSERT INTO REQUISICAO (DATAREQUISICAO, IDLIVRO, DATAENTREGA, PRAZOENTREGA, NIFLEITOR, NIFBIBLIOTECARIO) 
VALUES (to_date('12/21/2021', 'MM/DD/RRRR'), 76934, to_date('12/25/2021', 'MM/DD/RRRR'), to_date('03/01/2022', 'MM/DD/RRRR'), '202923548', '191369778');


-- End of inserting REQUISICAO examples


-- END OF INSERTING EXAMPLES


-- CONSULTING EXAMPLES

--Quais sao os titulos dos livros da nossa biblioteca?
SELECT TITULO FROM LIVRO;

--Quantos autores existem na base de dados da biblioteca? 
SELECT COUNT(*) AS NUMERO_DE_AUTORES FROM AUTOR;

--Qual a estante com mais livros? (id, genero literario)
SELECT IDESTANTE, GENEROLITERARIO, COUNT(*) AS NUMERO_DE_LIVROS
FROM GUARDADOEM INNER JOIN LIVRO ON GUARDADOEM.IDLIVRO = LIVRO.IDLIVRO
GROUP BY IDESTANTE, GENEROLITERARIO
ORDER BY NUMERO_DE_LIVROS DESC;

--Quantos leitores nascidos antes de 1980 requisitaram livros?
SELECT DISTINCT COUNT(*) AS LEITORES_NASCIDOS_ANTES_DE_1980
FROM LEITOR INNER JOIN REQUISICAO on REQUISICAO.nifleitor = leitor.nifleitor
WHERE to_date('01/01/1980', 'MM/DD/RRRR') > DATANASCIMENTO;

--Qual e o autor com o maior numero de livros? (nome)
SELECT NOMEAUTOR, COUNT (*) AS NUMERO_DE_LIVROS_ESCRITOS
FROM ESCREVE
GROUP BY NOMEAUTOR
ORDER BY NUMERO_DE_LIVROS_ESCRITOS DESC;

--Quantos funcionarios existem na nossa biblioteca?
SELECT COUNT(*) AS NUMERO_DE_FUNCIONARIOS
FROM FUNCIONARIO;

--Qual e o bibliotecario que fez maior numero de operacoes (requisicoes de livros)? (nome,NIF,nFuncionario)
SELECT NOMEPESSOA, NIFFUNCIONARIO, NFUNCIONARIO, COUNT(*) AS NUMERO_DE_REQUISICOES 
FROM PESSOAS INNER JOIN (SELECT NFUNCIONARIO, NIFFUNCIONARIO 
FROM FUNCIONARIO INNER JOIN REQUISICAO ON REQUISICAO.NIFBIBLIOTECARIO = FUNCIONARIO.NIFFUNCIONARIO)
ON PESSOAS.NIF = NIFFUNCIONARIO
GROUP BY NOMEPESSOA, NIFFUNCIONARIO, NFUNCIONARIO ORDER BY NUMERO_DE_REQUISICOES DESC;

--Quais os livros que nunca foram requisitados? (IDLIVRO, ISBN, titulo, editora)
SELECT IDLIVRO, ISBN, TITULO, EDITORA 
FROM ((SELECT IDLIVRO, ISBN, TITULO, EDITORA FROM LIVRO)
MINUS 
(SELECT LIVRO.IDLIVRO, ISBN, TITULO, EDITORA 
FROM REQUISICAO INNER JOIN LIVRO ON LIVRO.IDLIVRO = REQUISICAO.IDLIVRO));

--Quais os funcionarios que ja requisitaram livros da biblioteca? (nome,NIF, nFuncionario,email)
SELECT NOMEPESSOA, NIF, NFUNCIONARIO, MAIL
FROM PESSOAS INNER JOIN (SELECT NFUNCIONARIO, NIFLEITOR 
FROM FUNCIONARIO INNER JOIN LEITOR ON NIFLEITOR = NIFFUNCIONARIO) ON NIFLEITOR = PESSOAS.NIF;

--Quais os funcionarios existem com ordenado superior a 1100 euros? 
--Apresente a resposta por ordem decrescente. (nome,NIF, nFuncionario, ordenado, cargaSemanal)
SELECT NOMEPESSOA, NIF, NFUNCIONARIO, ORDENADO, CARGASEMANAL
FROM PESSOAS INNER JOIN (SELECT NFUNCIONARIO, NIFFUNCIONARIO, CARGASEMANAL, FUNCIONARIO.ORDENADO
FROM FUNCIONARIO INNER JOIN TRABALHO ON FUNCIONARIO.ORDENADO = TRABALHO.ORDENADO 
AND FUNCIONARIO.DESCRICAO = TRABALHO.DESCRICAO) ON NIFFUNCIONARIO = PESSOAS.NIF
WHERE ORDENADO > 1100
ORDER BY ORDENADO DESC;

--Qual e o funcionario com a maior carga semanal na nossa biblioteca? (nome, nFuncionario, cargaSemanal)
SELECT NOMEPESSOA, NIF, NFUNCIONARIO, ORDENADO, CARGASEMANAL
FROM PESSOAS INNER JOIN (SELECT NFUNCIONARIO, NIFFUNCIONARIO, CARGASEMANAL, FUNCIONARIO.ORDENADO 
FROM FUNCIONARIO INNER JOIN TRABALHO ON FUNCIONARIO.ORDENADO = TRABALHO.ORDENADO 
AND FUNCIONARIO.DESCRICAO = TRABALHO.DESCRICAO) ON NIFFUNCIONARIO = PESSOAS.NIF
GROUP BY NOMEPESSOA, NIF, NFUNCIONARIO, ORDENADO, CARGASEMANAL
ORDER BY CARGASEMANAL DESC;

--Qual e o livro com maior numero de autores? (IDLIVRO, ISBN, TITULO)
SELECT LIVRO.IDLIVRO, LIVRO.ISBN, LIVRO.TITULO, COUNT (*) AS NUMERO_DE_AUTORES_DO_LIVRO
FROM LIVRO INNER JOIN ESCREVE ON LIVRO.IDLIVRO = ESCREVE.IDLIVRO
GROUP BY LIVRO.IDLIVRO, LIVRO.ISBN, LIVRO.TITULO
ORDER BY NUMERO_DE_AUTORES_DO_LIVRO DESC;


-- End of CONSULTING EXAMPLES